@startuml

== Initialization ==
participant Game
participant Graph
participant Core

activate Core

Core -> manager **: create()

Game <- Core **: create(manager, Graph)
activate Game

Game -> manager ++: addEntity()
manager -> pacman **: create()
Game <-- manager --: createdEntity

Game -> pacman ++: addComponent<component::Position>()
pacman -> position **: create()
Game <-- pacman --: createdComponent

Game -> pacman ++: addComponent<component::ARenderable>({"ressources/pacman.txt", "ressources/pacman.png", "pacman_texture"})
pacman -> Graph ++: createRenderable({"ressources/pacman.txt", "ressources/pacman.png", "pacman_texture"})
Graph -> renderable **: create("ressources/pacman.png")
pacman <-- Graph --: createdRenderable
Game <-- pacman --: createdComponent

Game -> Graph ++: createAnimation(0, 1, 100)
Graph -> Anim1 **: create(0, 1, 100)
Game <-- Graph --: createdAnimation

Game -> renderable ++: setAnimation("Idle", Anim1)
return

Game -> Graph ++: createAnimation(1, 5, 100)
Graph -> Anim2 **: create(1, 5, 100)
Game <-- Graph --: createdAnimation

Game -> renderable ++: setAnimation("Move", Anim2)
return

Game -> Graph ++: createAnimation(1, 3, 50)
Graph -> Anim3 **: create(1, 3, 50)
Game <-- Graph --: createdAnimation

Game -> renderable ++: setAnimation("Die", Anim3)
return

return
== Game loop ==

@enduml